# CRANIUM
cranium.app.home=./

# SERVER
server.port=8080

# LOGGING
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

# H2
spring.h2.console.enabled=true

# DATASOURCE MEMORY
starter.spring.datasource.driver-class-name=org.h2.Driver
starter.spring.datasource.url=jdbc:h2:mem:cranium_erp;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH;INIT=RUNSCRIPT FROM 'classpath:db/test/starter/h2_starter_schema.sql'
starter.spring.datasource.username=sa
starter.spring.datasource.password=

starter.spring.slave.datasource.driver-class-name=org.h2.Driver
starter.spring.slave.datasource.url=jdbc:h2:mem:cranium_erp_slave;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH;INIT=RUNSCRIPT FROM 'classpath:db/test/starter/h2_starter_schema.sql'
starter.spring.slave.datasource.username=sa
starter.spring.slave.datasource.password=

# JPA
starter.spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
starter.spring.jpa.hibernate.ddl-auto=create-drop
starter.spring.jpa.show-sql=true
starter.spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# FLYWAY
spring.flyway.enabled=false

# HIBERNATE
starter.spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_aud
starter.spring.jpa.properties.org.hibernate.envers.revision_field_name=rev
starter.spring.jpa.properties.org.hibernate.envers.revision_type_field_name=revtype

# ASYNC
starter.async.config.corepoolsize=5
starter.async.config.maxpoolsize=10
starter.async.config.queuecapacity=10

# JWT TOKEN
starter.security.jwt.token.issuer=erp.cranium.id
starter.security.jwt.token.publicKey=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhXzt+sV5TXYUqR0HI1pMgq8JIdDdJ/xqqYNge0prfPRL+WApiWIvZDTKRHStWowSefal3fB+M34l0AT546X332zj30M/Yri9AZAqOzrgb4Um9yUfBlfknnxKUahhmbHe+3Rc00cBjTg+WUT2Bxhz1z1gkFrEXxj82rdi54/ynmh0epBNtTaBHMye+oJtSub1WeEyHFEWQDbfNMd38MsHInBc71nKGfp0HUfh5d84E25kAGywcCV9lOCOvNVy2Tu2+Gyzcgzb4Ecq3XD88pW2Vll5LR5eoa45pDFZ0DkQRg00AgKWHUBGrE2uvtBHkqyBrWOqroZ0pLKGV+AgwRWD8QIDAQAB
starter.security.jwt.token.publicKeyAdmin=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqh92Sfykg5Uvvll2KFLs5DGkr7IhT3PhVAfdLxhhWAWZmkQtwTq+VytCw1iPyOTc96Q9xxehES10Rotqy+I/Cy38FXSMeQ5k/vKPk2zkYXZTto+6KhH6ugYKL5EfCpq1VdckFMeBcBseuRhuQ0TnUzJ3cqlNhnJx7t6kzeVq686Yrs2Ju71oeZlsccLjBNEKceLjWKFnSFQTiLJTtiOon50ia5ntFPb79213S8ZhsO6jAMxnjY0jSs6uL2UN/mT7wIhUgfRxeusdJIOCbx+/MfekTZoSTNP9YcjtQFAslJsTfAa46NxhZbN5mMUBX85onTmyQeI15wFUcW8iTNADzQIDAQAB
starter.security.jwt.token.secretKey=vHkspHT785T9CjgvfSazjd2ykNyTpEmCjSwVgvBPLUYhx9YCMVYnXK6v2WHU8ESV
starter.security.jwt.token.secretKeyAdmin=fnsMymFvbny6kr5f2ZyW8ntCJFYTwSpL7kKyxbmu67qRTVMAvtwYZb2PnT7T64rb

# REST TEMPLATE
starter.http.outgoing.maxPooling=10
starter.http.outgoing.connectionTimeout=10000
starter.http.outgoing.readTimeout=30000
starter.http.outgoing.writeTimeout=30000

# AUTH SERVICE API
starter.auth-service.url=http://localhost:8090/auth-service
starter.auth-service.url.verification.token=${starter.auth-service.url}/verification/token

# USER SERVICE API
starter.user-service.url=http://localhost:8090/user-service
starter.user-service.url.scope.me=${starter.user-service.url}/scope/me

# MESSAGES
starter.spring.messages.basename=messages/starter/starter
starter.spring.messages.encoding=UTF-8
