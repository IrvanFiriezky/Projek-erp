# CRANIUM
user.cranium.app.home=./

# LOGGING
user.logging.level.org.springframework.web=INFO
user.logging.level.org.hibernate=ERROR

# DATASOURCE MEMORY
#user.spring.datasource.driver-class-name=org.h2.Driver
#user.spring.datasource.url=jdbc:h2:mem:cranium_erp;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH;INIT=RUNSCRIPT FROM 'classpath:db/test/user/h2_user_schema.sql'
#user.spring.datasource.username=sa
#user.spring.datasource.password=

#user.spring.slave.datasource.driver-class-name=org.h2.Driver
#user.spring.slave.datasource.url=jdbc:h2:mem:cranium_erp_slave;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH;INIT=RUNSCRIPT FROM 'classpath:db/test/user/h2_user_schema.sql'
#user.spring.slave.datasource.username=sa
#user.spring.slave.datasource.password=

# DATASOURCE POSTGRESQL
user.spring.datasource.driver-class-name=org.postgresql.Driver
user.spring.datasource.url=jdbc:postgresql://localhost:5432/cranium_erp?currentSchema=user
user.spring.datasource.username=postgres
user.spring.datasource.password=17012001

user.spring.slave.datasource.driver-class-name=org.postgresql.Driver
user.spring.slave.datasource.url=jdbc:postgresql://localhost:5432/cranium_erp?currentSchema=user
user.spring.slave.datasource.username=postgres
user.spring.slave.datasource.password=17012001

# HIKARI
user.spring.datasource.hikari.connectionTimeout=30000 
user.spring.datasource.hikari.idleTimeout=600000 
user.spring.datasource.hikari.maxLifetime=1800000
user.spring.datasource.hikari.maximumPoolSize=10

user.spring.slave.datasource.hikari.connectionTimeout=30000 
user.spring.slave.datasource.hikari.idleTimeout=600000 
user.spring.slave.datasource.hikari.maxLifetime=1800000
user.spring.slave.datasource.hikari.maximumPoolSize=10

# JPA
user.spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
user.spring.jpa.hibernate.ddl-auto=none
user.spring.jpa.show-sql=true
user.spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
auth.spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
auth.spring.jpa.hibernate.ddl-auto=none
auth.spring.jpa.show-sql=true
auth.spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# HIBERNATE
user.spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_aud
user.spring.jpa.properties.org.hibernate.envers.revision_field_name=rev
user.spring.jpa.properties.org.hibernate.envers.revision_type_field_name=revtype
auth.spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_aud
auth.spring.jpa.properties.org.hibernate.envers.revision_field_name=rev
auth.spring.jpa.properties.org.hibernate.envers.revision_type_field_name=revtype

# FLYWAY
user.spring.flyway.schemas=user
#user.spring.flyway.locations=filesystem:src/main/resources/db/migration/user
user.spring.flyway.locations=classpath:db/migration/user
user.spring.flyway.enabled=false

# JWT TOKEN USER
user.security.jwt.token.requestMatcher=/user-service
user.security.jwt.token.requestMatcherAdmin=/admin/user-service

# JWT TOKEN AUTH
auth.security.jwt.token.issuer=erp.cranium.id
auth.security.jwt.token.filterUrl=/auth-service/token
auth.security.jwt.token.requestMatcher=/auth-service
auth.security.jwt.token.privateKey=MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCcHkzSWNHrZrK0i++8Zj90d+7BwSYJgXvA44DRGCjcD0azKpPSeO9oV7J2UzBXzDjOSsmUNkfI9mJ2RWFr2tAdZzZ9NnnVQs8rxQDa9bri0T0YWTpn+Ba3o148PSm1v0EO6jiUljs64UIkdMBOQ+JBkyhPecCmWPDfGj/OcDtSx89cUQuFr5lVtFW65cuLd8A+B/e4ViGtQmlwA4oTnIt7EMSZMEx7WVH0UAxnxn/inMN5jVB9YGoTQsh5o7BYlbWAy49t7hd5moTrQtRN94iQxKbocavp0LlcwwNi69W11Yr06qfF/R2BW50SvkOKMrimDO9NNaDZnKndgjtEr+E9AgMBAAECggEABWBhwui+Kf46b09WbUWUL92lglS1i6RC78yl9g1/8rwv8iGoP5pcnFpQ0hRhWNS2rBwVPx5zcG9TysDu7vj1K94PGVbT8U1At0AsnF3UFtWf5gPEqCn6Fk7xAuAUXKb+hZX5ZtyZo5h4X6sJqGhcFWgM/leyE8iCWxybT++7i0k6jGHprC/koGrMd5Z/NpVamGWW6NfTrPMKe8JD3vucNF7koVDEy5qpaMvW+WyGDwW/T56DxSR9QT0bw1W2R3gV46l/WFfBI7NTDHOuKF7pmdUvidhjktSXR/4SToqapmWKHD3W/3ssY1y/JtcHCppdZ8vJChpMeFBUdtSt9M+2oQKBgQDLRMMg9OIbgsJAiGSoGpoVMOhvb8x0VKVW8u5oTGqeAIETr6MbONhiNJPKU3iLcdNMbAQVn8vj61GVDIZ6bhpc0VCmpU7ki55Sy79DhnLOSurGBUenOq3k3HZ846OT/bhuB9iOyJE6QyvDLw3mSigX7HKpTQfB2F4QTdIWd5tMCQKBgQDEnkA2xp2IrXeY1vmBO/IQezzf6Wd6N4aQo8n5JNRUspUFnfceY5JnBR+H6004NOuueeBo120B0ezG8RY42C3WKXs/r24lCknrmSLbv1gKm0jEEuyboLZiGko5EmeKT6C95pxy5kNo6P1RmX0cEqAe8txOLhPx/aM7oJJzWU+glQKBgClLZODTHwQ7wj7d9qT4EolvkCjja4POlnBdlfV2YMqMi6x2KAqlt7/rsoKOBpU9oJGL+CB0gDVjXwWKr987cvucQmg4eRiRDK8BWW/cZoJmUd+8vtvIXf96kk+450hvaQJhcatAL9DISKG0c3xvYEnL7VdboNHOpP1m8eFClzgRAoGBAINMvssVhZwBY22QmdwAoRz6f2Nz5aNLMzSh/D3Bp33MKBIxNBZ6Hgln9W955f5T8NN6Fi9NNUFS49DSrKlXS/zJhMG5sE9R+J05jXq749ppaoVtsc4X29PVhJ1qOfS2SjympPFh7cBAXvJAErlNgtpICnC2+qDOZVRrXYFkMfWlAoGAIIt0vnSftHTEbnUhRahMunoTZlP+4qWqJfr1jUZQcL2MzWHMFtdFoAvcXOxTs3Ed5BfadvkxBpEbjHvSglWbLYWhubhbFsKHnx8ca5e7WKAirZSdE2aY5j1ngqbZB1/xar5zpZJwkqS99iM6kW3pd67ArKQTMu9F7KU/hqieTUM=
auth.security.jwt.token.publicKey=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnB5M0ljR62aytIvvvGY/dHfuwcEmCYF7wOOA0Rgo3A9GsyqT0njvaFeydlMwV8w4zkrJlDZHyPZidkVha9rQHWc2fTZ51ULPK8UA2vW64tE9GFk6Z/gWt6NePD0ptb9BDuo4lJY7OuFCJHTATkPiQZMoT3nApljw3xo/znA7UsfPXFELha+ZVbRVuuXLi3fAPgf3uFYhrUJpcAOKE5yLexDEmTBMe1lR9FAMZ8Z/4pzDeY1QfWBqE0LIeaOwWJW1gMuPbe4XeZqE60LUTfeIkMSm6HGr6dC5XMMDYuvVtdWK9Oqnxf0dgVudEr5DijK4pgzvTTWg2Zyp3YI7RK/hPQIDAQAB
auth.security.jwt.token.secretKey=7o82yjs1i2d5cbqmawuya3ro9xgq57b9ozuoxdo5b4l0qwcvzw7jshc9ls3cno5m
auth.security.jwt.token.filterUrlAdmin=/admin/auth-service/token
auth.security.jwt.token.requestMatcherAdmin=/admin/auth-service
auth.security.jwt.token.privateKeyAdmin=MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCwEYXGYeLjql0xJSbYGdIlqwy1ecuSepNXLANLTwENXcVGBrJ4zhGgQt2zZXP5MKK9v1X2oRKNRcJL3GpjzQY2C5w7uz6RJUS7bg6kLihB9dIFwrMeEzQV9fQhS7U+PIck8I93q9FI82R2FSM0xd0PjrQELKhQctiIliecWRyQJpppZMVpYRog3zDFiZH5z8rbSgeIQIZMncmA46u65ICnaH6bTb699cPUFkHdV1xqk0yH16PFGOrYEJ6Z0fMrWljr7SykdHMe84+ukMYGT/LDW2gmVHwaJT3Jz3yDtZBB/uKGa6Fjcuv9VYplBKxXxYCbuGQJH+y9I/AHZTfxSCdVAgMBAAECggEABeAufcfDqF4wWiTtAQO1lLkQBW4L2jbPJswqzPnVOr1hHryM+q/tJyhsGSH0MZdLAGLmVcLGKXhFQGkElObhQ5mgwbPhOztKP1Na15BMcCJpu0mmLBqvH4zTyZkAR/7W8hI5cMsyArRQAIp6iww6W8ai9nZeD0HnPNb+pJQAZRq9IOIIfsnJyj1qkD3KQ/Ke2wZzn/DVUoH9T8IjfBubj4tuTAxo6HupoEpzIBa/poiC+vqBwa4xG4IYiAV1M8W5NnpBsNz4ErFaZ9KfewaKhxk3h9iIR+RzoanqR/5+gvwn3vg2+EU4LDdXnNpNHfYyyqIY4LNQcWG5CaaCYfr4IQKBgQDBYT52DvEKd1YGjqLFlAlWViCPgC6CYh6TcgMJ1LY2sZjR5t6BKxU44tmkkGMuheS9xTYnd18hAZDviCkt//n1Ik2npOJe+xYz1icGXbd/sSsbriWDLAXMTLkoed2C93BN5SQMlViAXV+BBObjVnACXmtnfFMqqwIk5+8rv3bpdQKBgQDpFTOPjBy2OOshVtMnEIvYb26+1KQkW5IRV+nNXUxrZj/T8FSi01Woq0BAunW8fxyLe+eA08FI9gKrPcnoj2U6yVgFT6JbMMc3AySfty9wWk/oJkeOyJmuPngj9e69VpL3o+63raDyoYydAyYl6a6ZA9n+FemGrICxLoQjfSqqYQKBgQCaAXj+Cp46iJmRNU06btAU2xipUBs6KSxSnqz+ylGnMz8Sg3vWgNow6LEOFxN1/JoT7BhZy/6NybKEoPqysLZ/XCdeCLljjTG8bKO9tSsrXYyISeOEGK4xazTWoF8iKy9cSc2w28uUx0gE90Nt7+vaZxnAW8ncJD7b536ZZ60q9QKBgCwmhfPE+JNTyMYx6iFWMwc2ZGXlZYo1hj+exXzPFXCql6CPv5hwK6OdfLhGGZMxCLkrKTjv44bsgqjpNVvF/cja5r9qzDg1zyaOg9t1GZlQoh45Ugir2uB0mNFG/ogC5Cfgd5F3ZCtRio8bT5iS4S2+2wYUJH4MIvxs8T6/sNtBAoGAfFHWGak+J8Fu73ET/BUF3NUHN9u7XSpZR3+7BHNSlU0VHEhPo2qDAaj9E+0XEqyJ7jYw8iKlCiz7imsQc89C47ZVWh6v1NIc47tmYxW7T0gTALcbdz3B5r6ePQffNAMy8jAqxiekJkyEH+nke3oCzDhClmwIRcbjLGbMlk7wC8I=
auth.security.jwt.token.publicKeyAdmin=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsBGFxmHi46pdMSUm2BnSJasMtXnLknqTVywDS08BDV3FRgayeM4RoELds2Vz+TCivb9V9qESjUXCS9xqY80GNgucO7s+kSVEu24OpC4oQfXSBcKzHhM0FfX0IUu1PjyHJPCPd6vRSPNkdhUjNMXdD460BCyoUHLYiJYnnFkckCaaaWTFaWEaIN8wxYmR+c/K20oHiECGTJ3JgOOruuSAp2h+m02+vfXD1BZB3VdcapNMh9ejxRjq2BCemdHzK1pY6+0spHRzHvOPrpDGBk/yw1toJlR8GiU9yc98g7WQQf7ihmuhY3Lr/VWKZQSsV8WAm7hkCR/svSPwB2U38UgnVQIDAQAB
auth.security.jwt.token.secretKeyAdmin=d1ax1hsk1k94umasjj490m9f1zjxgkg28owvvsmsjk4s9pgduxo1le7lay60ae4g

# REST TEMPLATE
user.http.outgoing.maxPooling=10
user.http.outgoing.connectionTimeout=30000
user.http.outgoing.readTimeout=30000

# MESSAGES
auth.spring.messages.basename=messages/auth/auth
auth.spring.messages.encoding=UTF-8
user.spring.messages.basename=messages/user/user
user.spring.messages.encoding=UTF-8

# AUTH SERVICE API
user.auth-service.url=http://localhost:8080/auth-service
user.auth-service.url.verification.token=${user.auth-service.url}/verification/token

# MASTER SERVICE API
user.master-service.url=http://localhost:8080/master-service
user.master-service.url.product=${user.master-service.url}/product
